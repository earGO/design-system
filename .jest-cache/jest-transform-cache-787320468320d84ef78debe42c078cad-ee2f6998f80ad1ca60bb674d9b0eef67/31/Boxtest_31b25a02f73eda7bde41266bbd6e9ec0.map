{"version":3,"sources":["Box.test.js"],"names":["describe","test","json","renderer","create","toJSON","expect","toMatchSnapshot","toHaveStyleRule","theme","space","colors","blue","green","console","error","jest","fn","mock","calls","toString","indexOf","mockRestore"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport renderer from 'react-test-renderer'\r\nimport 'jest-styled-components'\r\nimport Box from '../src/Box'\r\nimport theme from '@design-system/theme'\r\n\r\ndescribe('Box', () => {\r\n  test('renders', () => {\r\n    const json = renderer.create(<Box />).toJSON()\r\n    expect(json).toMatchSnapshot()\r\n  })\r\n\r\n  test('width prop sets width', () => {\r\n    const json = renderer.create(<Box width={1 / 2} />).toJSON()\r\n    expect(json).toMatchSnapshot()\r\n    expect(json).toHaveStyleRule('width', '50%')\r\n  })\r\n\r\n  test('m prop sets margin', () => {\r\n    const json = renderer.create(<Box m={2} />).toJSON()\r\n    expect(json).toMatchSnapshot()\r\n    expect(json).toHaveStyleRule('margin', theme.space[2] + 'px')\r\n  })\r\n\r\n  test('p prop sets padding', () => {\r\n    const json = renderer.create(<Box p={2} />).toJSON()\r\n    expect(json).toMatchSnapshot()\r\n    expect(json).toHaveStyleRule('padding', theme.space[2] + 'px')\r\n  })\r\n\r\n  test('color prop sets color', () => {\r\n    const json = renderer.create(<Box color=\"blue\" />).toJSON()\r\n    expect(json).toMatchSnapshot()\r\n    expect(json).toHaveStyleRule('color', theme.colors.blue)\r\n  })\r\n\r\n  test('bg prop sets background color', () => {\r\n    const json = renderer.create(<Box bg=\"green\" />).toJSON()\r\n    expect(json).toMatchSnapshot()\r\n    expect(json).toHaveStyleRule('background-color', theme.colors.green)\r\n  })\r\n\r\n  test('align prop triggers warning', () => {\r\n    console.error = jest.fn()\r\n\r\n    const json = renderer.create(<Box align=\"center\" />).toJSON()\r\n\r\n    expect(\r\n      console.error.mock.calls\r\n        .toString()\r\n        .indexOf(\r\n          'The Box `align` prop will deprecated. Please use Text instead.'\r\n        ) !== -1\r\n    )\r\n    console.error.mockRestore()\r\n  })\r\n})\r\n"]}