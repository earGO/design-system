019690a4168edbba19759633c34a67fd
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _cssColorNames = _interopRequireDefault(require("css-color-names"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var black = '#3a3a3a';
var white = '#ffffff'; // greys

var lightGrey = '#f5f5f5';
var semiLightGrey = '#ecebeb';
var grey = '#b5b5b5';
var darkGrey = '#b5b5b5';
var red = '#ef5350';
var green = '#66bb6a';
var orange = '#ffc324'; // blues

var lightBlue = '#1e88e5';
var blue = '#0091ea';
var darkBlue = '#1976d2';

var palette = _objectSpread({}, _cssColorNames.default, {
  black: black,
  white: white,
  lightGrey: lightGrey,
  semiLightGrey: semiLightGrey,
  grey: grey,
  lightBlue: lightBlue,
  blue: blue,
  darkBlue: darkBlue,
  red: red,
  green: green,
  orange: orange,
  darkGrey: darkGrey
});

var components = {
  // Input element
  input: {
    hover: palette.black,
    disabled: palette.grey,
    error: palette.red,
    success: palette.green,
    focus: palette.lightBlue
  },
  // Checkbox
  checkbox: {
    checked: palette.lightBlue,
    unchecked: palette.lightGrey,
    disabled: palette.grey
  },
  //Tabs
  tabs: {
    active: palette.blue,
    hover: palette.lightBlue
  },
  //Radio
  radio: {
    checked: palette.lightBlue,
    unchecked: palette.lightGrey,
    disabled: palette.grey
  }
};
var system = {
  // Main color
  primary: palette.blue,
  // States
  hover: palette.lightBlue,
  success: palette.green,
  warning: palette.orange,
  error: palette.red,
  // Misc
  text: palette.black,
  border: palette.semiLightGrey,
  // Disabled
  disabled: palette.grey,
  highlight: palette.lightGrey,
  onclick: palette.darkBlue,
  // Scrollbar
  scrollbar: palette.darkGrey,
  //legacy
  info: palette.lightBlue,
  highlightHover: palette.lightBlue,
  black: palette.black,
  white: palette.white
};

var _default = _objectSpread({
  system: system,
  palette: palette
}, palette, {}, system, {}, components);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbG9ycy5qcyJdLCJuYW1lcyI6WyJibGFjayIsIndoaXRlIiwibGlnaHRHcmV5Iiwic2VtaUxpZ2h0R3JleSIsImdyZXkiLCJkYXJrR3JleSIsInJlZCIsImdyZWVuIiwib3JhbmdlIiwibGlnaHRCbHVlIiwiYmx1ZSIsImRhcmtCbHVlIiwicGFsZXR0ZSIsImNzc2NvbG9ycyIsImNvbXBvbmVudHMiLCJpbnB1dCIsImhvdmVyIiwiZGlzYWJsZWQiLCJlcnJvciIsInN1Y2Nlc3MiLCJmb2N1cyIsImNoZWNrYm94IiwiY2hlY2tlZCIsInVuY2hlY2tlZCIsInRhYnMiLCJhY3RpdmUiLCJyYWRpbyIsInN5c3RlbSIsInByaW1hcnkiLCJ3YXJuaW5nIiwidGV4dCIsImJvcmRlciIsImhpZ2hsaWdodCIsIm9uY2xpY2siLCJzY3JvbGxiYXIiLCJpbmZvIiwiaGlnaGxpZ2h0SG92ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7Ozs7OztBQUVBLElBQU1BLEtBQUssR0FBRyxTQUFkO0FBQ0EsSUFBTUMsS0FBSyxHQUFHLFNBQWQsQyxDQUVBOztBQUNBLElBQU1DLFNBQVMsR0FBRyxTQUFsQjtBQUNBLElBQU1DLGFBQWEsR0FBRyxTQUF0QjtBQUNBLElBQU1DLElBQUksR0FBRyxTQUFiO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLFNBQWpCO0FBRUEsSUFBTUMsR0FBRyxHQUFHLFNBQVo7QUFDQSxJQUFNQyxLQUFLLEdBQUcsU0FBZDtBQUNBLElBQU1DLE1BQU0sR0FBRyxTQUFmLEMsQ0FDQTs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsU0FBbEI7QUFDQSxJQUFNQyxJQUFJLEdBQUcsU0FBYjtBQUNBLElBQU1DLFFBQVEsR0FBRyxTQUFqQjs7QUFFQSxJQUFNQyxPQUFPLHFCQUNSQyxzQkFEUTtBQUVYYixFQUFBQSxLQUFLLEVBQUxBLEtBRlc7QUFHWEMsRUFBQUEsS0FBSyxFQUFMQSxLQUhXO0FBSVhDLEVBQUFBLFNBQVMsRUFBVEEsU0FKVztBQUtYQyxFQUFBQSxhQUFhLEVBQWJBLGFBTFc7QUFNWEMsRUFBQUEsSUFBSSxFQUFKQSxJQU5XO0FBT1hLLEVBQUFBLFNBQVMsRUFBVEEsU0FQVztBQVFYQyxFQUFBQSxJQUFJLEVBQUpBLElBUlc7QUFTWEMsRUFBQUEsUUFBUSxFQUFSQSxRQVRXO0FBVVhMLEVBQUFBLEdBQUcsRUFBSEEsR0FWVztBQVdYQyxFQUFBQSxLQUFLLEVBQUxBLEtBWFc7QUFZWEMsRUFBQUEsTUFBTSxFQUFOQSxNQVpXO0FBYVhILEVBQUFBLFFBQVEsRUFBUkE7QUFiVyxFQUFiOztBQWdCQSxJQUFNUyxVQUFVLEdBQUc7QUFDakI7QUFDQUMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLEtBQUssRUFBRUosT0FBTyxDQUFDWixLQURWO0FBRUxpQixJQUFBQSxRQUFRLEVBQUVMLE9BQU8sQ0FBQ1IsSUFGYjtBQUdMYyxJQUFBQSxLQUFLLEVBQUVOLE9BQU8sQ0FBQ04sR0FIVjtBQUlMYSxJQUFBQSxPQUFPLEVBQUVQLE9BQU8sQ0FBQ0wsS0FKWjtBQUtMYSxJQUFBQSxLQUFLLEVBQUVSLE9BQU8sQ0FBQ0g7QUFMVixHQUZVO0FBVWpCO0FBQ0FZLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxPQUFPLEVBQUVWLE9BQU8sQ0FBQ0gsU0FEVDtBQUVSYyxJQUFBQSxTQUFTLEVBQUVYLE9BQU8sQ0FBQ1YsU0FGWDtBQUdSZSxJQUFBQSxRQUFRLEVBQUVMLE9BQU8sQ0FBQ1I7QUFIVixHQVhPO0FBaUJqQjtBQUNBb0IsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLE1BQU0sRUFBRWIsT0FBTyxDQUFDRixJQURaO0FBRUpNLElBQUFBLEtBQUssRUFBRUosT0FBTyxDQUFDSDtBQUZYLEdBbEJXO0FBc0JqQjtBQUNBaUIsRUFBQUEsS0FBSyxFQUFFO0FBQ0xKLElBQUFBLE9BQU8sRUFBRVYsT0FBTyxDQUFDSCxTQURaO0FBRUxjLElBQUFBLFNBQVMsRUFBRVgsT0FBTyxDQUFDVixTQUZkO0FBR0xlLElBQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDUjtBQUhiO0FBdkJVLENBQW5CO0FBOEJBLElBQU11QixNQUFNLEdBQUc7QUFDYjtBQUNBQyxFQUFBQSxPQUFPLEVBQUVoQixPQUFPLENBQUNGLElBRko7QUFJYjtBQUNBTSxFQUFBQSxLQUFLLEVBQUVKLE9BQU8sQ0FBQ0gsU0FMRjtBQU1iVSxFQUFBQSxPQUFPLEVBQUVQLE9BQU8sQ0FBQ0wsS0FOSjtBQU9ic0IsRUFBQUEsT0FBTyxFQUFFakIsT0FBTyxDQUFDSixNQVBKO0FBUWJVLEVBQUFBLEtBQUssRUFBRU4sT0FBTyxDQUFDTixHQVJGO0FBVWI7QUFDQXdCLEVBQUFBLElBQUksRUFBRWxCLE9BQU8sQ0FBQ1osS0FYRDtBQVliK0IsRUFBQUEsTUFBTSxFQUFFbkIsT0FBTyxDQUFDVCxhQVpIO0FBY2I7QUFDQWMsRUFBQUEsUUFBUSxFQUFFTCxPQUFPLENBQUNSLElBZkw7QUFnQmI0QixFQUFBQSxTQUFTLEVBQUVwQixPQUFPLENBQUNWLFNBaEJOO0FBaUJiK0IsRUFBQUEsT0FBTyxFQUFFckIsT0FBTyxDQUFDRCxRQWpCSjtBQWtCYjtBQUNBdUIsRUFBQUEsU0FBUyxFQUFFdEIsT0FBTyxDQUFDUCxRQW5CTjtBQXFCYjtBQUNBOEIsRUFBQUEsSUFBSSxFQUFFdkIsT0FBTyxDQUFDSCxTQXRCRDtBQXVCYjJCLEVBQUFBLGNBQWMsRUFBRXhCLE9BQU8sQ0FBQ0gsU0F2Qlg7QUF3QmJULEVBQUFBLEtBQUssRUFBRVksT0FBTyxDQUFDWixLQXhCRjtBQXlCYkMsRUFBQUEsS0FBSyxFQUFFVyxPQUFPLENBQUNYO0FBekJGLENBQWY7OztBQTZCRTBCLEVBQUFBLE1BQU0sRUFBTkEsTTtBQUNBZixFQUFBQSxPQUFPLEVBQVBBO0dBQ0dBLE8sTUFDQWUsTSxNQUNBYixVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNzc2NvbG9ycyBmcm9tICdjc3MtY29sb3ItbmFtZXMnXHJcblxyXG5jb25zdCBibGFjayA9ICcjM2EzYTNhJ1xyXG5jb25zdCB3aGl0ZSA9ICcjZmZmZmZmJ1xyXG5cclxuLy8gZ3JleXNcclxuY29uc3QgbGlnaHRHcmV5ID0gJyNmNWY1ZjUnXHJcbmNvbnN0IHNlbWlMaWdodEdyZXkgPSAnI2VjZWJlYidcclxuY29uc3QgZ3JleSA9ICcjYjViNWI1J1xyXG5jb25zdCBkYXJrR3JleSA9ICcjYjViNWI1J1xyXG5cclxuY29uc3QgcmVkID0gJyNlZjUzNTAnXHJcbmNvbnN0IGdyZWVuID0gJyM2NmJiNmEnXHJcbmNvbnN0IG9yYW5nZSA9ICcjZmZjMzI0J1xyXG4vLyBibHVlc1xyXG5jb25zdCBsaWdodEJsdWUgPSAnIzFlODhlNSdcclxuY29uc3QgYmx1ZSA9ICcjMDA5MWVhJ1xyXG5jb25zdCBkYXJrQmx1ZSA9ICcjMTk3NmQyJ1xyXG5cclxuY29uc3QgcGFsZXR0ZSA9IHtcclxuICAuLi5jc3Njb2xvcnMsXHJcbiAgYmxhY2ssXHJcbiAgd2hpdGUsXHJcbiAgbGlnaHRHcmV5LFxyXG4gIHNlbWlMaWdodEdyZXksXHJcbiAgZ3JleSxcclxuICBsaWdodEJsdWUsXHJcbiAgYmx1ZSxcclxuICBkYXJrQmx1ZSxcclxuICByZWQsXHJcbiAgZ3JlZW4sXHJcbiAgb3JhbmdlLFxyXG4gIGRhcmtHcmV5XHJcbn1cclxuXHJcbmNvbnN0IGNvbXBvbmVudHMgPSB7XHJcbiAgLy8gSW5wdXQgZWxlbWVudFxyXG4gIGlucHV0OiB7XHJcbiAgICBob3ZlcjogcGFsZXR0ZS5ibGFjayxcclxuICAgIGRpc2FibGVkOiBwYWxldHRlLmdyZXksXHJcbiAgICBlcnJvcjogcGFsZXR0ZS5yZWQsXHJcbiAgICBzdWNjZXNzOiBwYWxldHRlLmdyZWVuLFxyXG4gICAgZm9jdXM6IHBhbGV0dGUubGlnaHRCbHVlXHJcbiAgfSxcclxuXHJcbiAgLy8gQ2hlY2tib3hcclxuICBjaGVja2JveDoge1xyXG4gICAgY2hlY2tlZDogcGFsZXR0ZS5saWdodEJsdWUsXHJcbiAgICB1bmNoZWNrZWQ6IHBhbGV0dGUubGlnaHRHcmV5LFxyXG4gICAgZGlzYWJsZWQ6IHBhbGV0dGUuZ3JleVxyXG4gIH0sXHJcblxyXG4gIC8vVGFic1xyXG4gIHRhYnM6IHtcclxuICAgIGFjdGl2ZTogcGFsZXR0ZS5ibHVlLFxyXG4gICAgaG92ZXI6IHBhbGV0dGUubGlnaHRCbHVlXHJcbiAgfSxcclxuICAvL1JhZGlvXHJcbiAgcmFkaW86IHtcclxuICAgIGNoZWNrZWQ6IHBhbGV0dGUubGlnaHRCbHVlLFxyXG4gICAgdW5jaGVja2VkOiBwYWxldHRlLmxpZ2h0R3JleSxcclxuICAgIGRpc2FibGVkOiBwYWxldHRlLmdyZXlcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IHN5c3RlbSA9IHtcclxuICAvLyBNYWluIGNvbG9yXHJcbiAgcHJpbWFyeTogcGFsZXR0ZS5ibHVlLFxyXG5cclxuICAvLyBTdGF0ZXNcclxuICBob3ZlcjogcGFsZXR0ZS5saWdodEJsdWUsXHJcbiAgc3VjY2VzczogcGFsZXR0ZS5ncmVlbixcclxuICB3YXJuaW5nOiBwYWxldHRlLm9yYW5nZSxcclxuICBlcnJvcjogcGFsZXR0ZS5yZWQsXHJcblxyXG4gIC8vIE1pc2NcclxuICB0ZXh0OiBwYWxldHRlLmJsYWNrLFxyXG4gIGJvcmRlcjogcGFsZXR0ZS5zZW1pTGlnaHRHcmV5LFxyXG5cclxuICAvLyBEaXNhYmxlZFxyXG4gIGRpc2FibGVkOiBwYWxldHRlLmdyZXksXHJcbiAgaGlnaGxpZ2h0OiBwYWxldHRlLmxpZ2h0R3JleSxcclxuICBvbmNsaWNrOiBwYWxldHRlLmRhcmtCbHVlLFxyXG4gIC8vIFNjcm9sbGJhclxyXG4gIHNjcm9sbGJhcjogcGFsZXR0ZS5kYXJrR3JleSxcclxuXHJcbiAgLy9sZWdhY3lcclxuICBpbmZvOiBwYWxldHRlLmxpZ2h0Qmx1ZSxcclxuICBoaWdobGlnaHRIb3ZlcjogcGFsZXR0ZS5saWdodEJsdWUsXHJcbiAgYmxhY2s6IHBhbGV0dGUuYmxhY2ssXHJcbiAgd2hpdGU6IHBhbGV0dGUud2hpdGVcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIHN5c3RlbSxcclxuICBwYWxldHRlLFxyXG4gIC4uLnBhbGV0dGUsXHJcbiAgLi4uc3lzdGVtLFxyXG4gIC4uLmNvbXBvbmVudHNcclxufVxyXG4iXX0=