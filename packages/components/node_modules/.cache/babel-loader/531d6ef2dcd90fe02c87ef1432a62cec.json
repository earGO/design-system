{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\repos\\\\design-system-monorepo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\repos\\\\design-system-monorepo\\\\packages\\\\icons\\\\components\\\\Icon.js\";\nimport React from 'react';\nimport upperFirst from 'lodash.upperfirst';\nimport PropTypes from 'prop-types';\nimport * as icons from './index';\n\nvar Icon = function Icon(_ref) {\n  var name = _ref.name,\n      title = _ref.title,\n      desc = _ref.desc,\n      titleId = _ref.titleId,\n      descId = _ref.descId,\n      props = _objectWithoutProperties(_ref, [\"name\", \"title\", \"desc\", \"titleId\", \"descId\"]);\n\n  var Component = icons[name] || icons[upperFirst(name)];\n  if (!Component) return false;\n  /**\r\n   *  To support older browsers, make sure 'titleId' is passed along with 'title' props and\r\n   * 'descId' with 'desc' props\r\n   * Also, <desc> element should be followed by a <title> tag for <svg> elements\r\n   * */\n\n  if (!!title) {\n    var ariaLabelledBy = '';\n    props['aria-hidden'] = 'false';\n\n    if (!!titleId) {\n      ariaLabelledBy = titleId;\n    }\n\n    if (!!desc && !!descId) {\n      ariaLabelledBy = \"\".concat(ariaLabelledBy, \" \").concat(descId);\n    }\n\n    if (!!ariaLabelledBy) {\n      props['aria-labelledby'] = ariaLabelledBy;\n    }\n  }\n\n  return React.createElement(Component, Object.assign({\n    title: title,\n    desc: desc,\n    titleId: titleId,\n    descId: descId\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nIcon.defaultProps = {\n  size: 24,\n  'aria-hidden': 'true',\n  focusable: 'false',\n  tabIndex: '-1'\n};\nIcon.displayName = 'Icon';\nIcon.isIcon = true;\nIcon.propTypes = {\n  name: function name(props, key, componentName) {\n    var name = props[key];\n\n    if (!icons[name] && !icons[upperFirst(name)]) {\n      return new Error(\"Unknown name prop `\".concat(name, \"` supplied to `\").concat(componentName, \"`\"));\n    } else if (!icons[name]) {\n      return new Error(\"Icon name prop should be uppercase.\\n\" + \"Use `\".concat(upperFirst(name), \"` instead of \").concat(name, \".\"));\n    }\n  },\n  title: function title(props, propName, componentName) {\n    if (typeof props[propName] !== 'string') {\n      return new Error(\"'title' prop supplied to '\".concat(componentName, \"' should be a string\"));\n    } else if (!!props[propName] && !props['titleId']) {\n      return new Error(\"'titleId' prop should be passed along with 'title' prop to '\".concat(componentName, \"'\"));\n    }\n  },\n  desc: function desc(props, propName, componentName) {\n    if (typeof props[propName] !== 'string') {\n      return new Error(\"'desc' prop supplied to '\".concat(componentName, \"' should be a string\"));\n    } else if (!!props[propName] && !props['title']) {\n      return new Error(\"'title' prop should be passed along with 'desc' prop to '\".concat(componentName, \"'\"));\n    } else if (!!props[propName] && !props['descId']) {\n      return new Error(\"'descId' prop should be passed along with 'desc' prop to '\".concat(componentName, \"'\"));\n    }\n  },\n  titleId: PropTypes.string,\n  descId: PropTypes.string\n};\nexport default Icon;","map":{"version":3,"sources":["D:\\repos\\design-system-monorepo\\packages\\icons\\components\\Icon.js"],"names":["React","upperFirst","PropTypes","icons","Icon","name","title","desc","titleId","descId","props","Component","ariaLabelledBy","defaultProps","size","focusable","tabIndex","displayName","isIcon","propTypes","key","componentName","Error","propName","string"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport upperFirst from 'lodash.upperfirst'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport * as icons from './index'\r\n\r\nconst Icon = ({name, title, desc, titleId, descId, ...props}) => {\r\n  const Component = icons[name] || icons[upperFirst(name)]\r\n  if (!Component) return false\r\n\r\n  /**\r\n   *  To support older browsers, make sure 'titleId' is passed along with 'title' props and\r\n   * 'descId' with 'desc' props\r\n   * Also, <desc> element should be followed by a <title> tag for <svg> elements\r\n   * */\r\n  if (!!title) {\r\n    let ariaLabelledBy = ''\r\n    props['aria-hidden'] = 'false'\r\n\r\n    if (!!titleId) {\r\n      ariaLabelledBy = titleId\r\n    }\r\n\r\n    if (!!desc && !!descId) {\r\n      ariaLabelledBy = `${ariaLabelledBy} ${descId}`\r\n    }\r\n\r\n    if (!!ariaLabelledBy) {\r\n      props['aria-labelledby'] = ariaLabelledBy\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Component\r\n      title={title}\r\n      desc={desc}\r\n      titleId={titleId}\r\n      descId={descId}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nIcon.defaultProps = {\r\n  size: 24,\r\n  'aria-hidden': 'true',\r\n  focusable: 'false',\r\n  tabIndex: '-1'\r\n}\r\n\r\nIcon.displayName = 'Icon'\r\nIcon.isIcon = true\r\n\r\nIcon.propTypes = {\r\n  name: (props, key, componentName) => {\r\n    const name = props[key]\r\n    if (!icons[name] && !icons[upperFirst(name)]) {\r\n      return new Error(\r\n        `Unknown name prop \\`${name}\\` supplied to \\`${componentName}\\``\r\n      )\r\n    } else if (!icons[name]) {\r\n      return new Error(\r\n        `Icon name prop should be uppercase.\\n` +\r\n          `Use \\`${upperFirst(name)}\\` instead of ${name}.`\r\n      )\r\n    }\r\n  },\r\n  title: (props, propName, componentName) => {\r\n    if (typeof props[propName] !== 'string') {\r\n      return new Error(\r\n        `'title' prop supplied to '${componentName}' should be a string`\r\n      )\r\n    } else if (!!props[propName] && !props['titleId']) {\r\n      return new Error(\r\n        `'titleId' prop should be passed along with 'title' prop to '${componentName}'`\r\n      )\r\n    }\r\n  },\r\n  desc: (props, propName, componentName) => {\r\n    if (typeof props[propName] !== 'string') {\r\n      return new Error(\r\n        `'desc' prop supplied to '${componentName}' should be a string`\r\n      )\r\n    } else if (!!props[propName] && !props['title']) {\r\n      return new Error(\r\n        `'title' prop should be passed along with 'desc' prop to '${componentName}'`\r\n      )\r\n    } else if (!!props[propName] && !props['descId']) {\r\n      return new Error(\r\n        `'descId' prop should be passed along with 'desc' prop to '${componentName}'`\r\n      )\r\n    }\r\n  },\r\n  titleId: PropTypes.string,\r\n  descId: PropTypes.string\r\n}\r\n\r\nexport default Icon\r\n"]},"metadata":{},"sourceType":"module"}